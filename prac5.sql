--create a function which returns hello world--
--test--
CREATE FUNCTION hw()
RETURNS VARCHAR(50)
AS
BEGIN
	 RETURN 'HELLO WORLD'
END

SELECT dbo.hw()

--1. create a function to find simple interest, CSI = p*r*n/100--
DECLARE @P INT, @R INT, @N INT;
CREATE FUNCTION SI(@P INT, @R INT, @N INT)
RETURNS INT
AS
BEGIN
	 RETURN (@P * @R * @N)/100;
END
SELECT dbo.SI(10,10,10)

--2. CREATE A FUNCTION TO FIND FEET TO INCH(1FEET = 12INCH)--

CREATE FUNCTION FEETTOINCH(@FEET INT)
RETURNS INT
AS
BEGIN
	RETURN (@FEET * 12)
END

SELECT dbo.FEETTOINCH(10);

--3. CREATE A FUNCTION TO CONVERT CELCIUS INTO FAHRENHIT(CEL*9/5)+35--

CREATE FUNCTION CELTOFAH(@CEL INT)
RETURNS INT
AS
BEGIN
	RETURN (@CEL * 9/5)+35
END

SELECT dbo.CELTOFAH(10);

--4. CREATE A FUNCTION TO FIND THE FACTORIAL OF A NUMBER--
CREATE FUNCTION FACT(@NUM INT)
RETURNS INT
AS
BEGIN
	DECLARE @I INT = 1, @ANS INT=1;
	WHILE(@I <= @NUM)
		BEGIN
			SET @ANS = @ANS * @I;
			SET @I = @I + 1;
		END	
	RETURN @ANS
END
DROP FUNCTION FACT
SELECT dbo.FACT(5)

--5. WRITE QUERY TO CREATE A FUCNTION TO FIND THE SUM OF ODD NUMBER BETWEEN TWO RANGES IN MICROSOFT SQL SERVER

CREATE FUNCTION SumOfOdd (@NUM1 INT, @NUM2 INT)
RETURNS INT
AS
BEGIN
    DECLARE @sum INT = 0;
    DECLARE @currentNum INT = @NUM1;
    
    WHILE @currentNum <= @NUM2
    BEGIN
        IF @currentNum % 2 <> 0
        BEGIN
            SET @sum = @sum + @currentNum;
        END
        SET @currentNum = @currentNum + 1;
    END
    
    RETURN @sum;
END;
DROP FUNCTION SumOfOddNumbersInRange
SELECT dbo.SumOfOdd(5, 10)


